-----------------------------------------------------------------------------
Info file generated by Happy Version 2.1.7 from Grammar.y
-----------------------------------------------------------------------------

state 12 contains 1 shift/reduce conflicts.
state 58 contains 1 shift/reduce conflicts.
state 70 contains 5 shift/reduce conflicts.

terminal "in" is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parser -> SASA                              (0)
	SASA -> int                                        (1)
	SASA -> bool                                       (2)
	SASA -> var                                        (3)
	SASA -> '(' "not" SASA ')'                         (4)
	SASA -> '(' '+' ExpList ')'                        (5)
	SASA -> '(' '-' ExpList ')'                        (6)
	SASA -> '(' '*' ExpList ')'                        (7)
	SASA -> '(' '/' ExpList ')'                        (8)
	SASA -> '(' '=' ExpList ')'                        (9)
	SASA -> '(' '<' ExpList ')'                        (10)
	SASA -> '(' '>' ExpList ')'                        (11)
	SASA -> '(' '<=' ExpList ')'                       (12)
	SASA -> '(' '>=' ExpList ')'                       (13)
	SASA -> '(' '!=' ExpList ')'                       (14)
	SASA -> '(' "lambda" '(' VarList ')' SASA ')'      (15)
	SASA -> '(' SASA SASAList ')'                      (16)
	SASA -> '(' "sqrt" SASA ')'                        (17)
	SASA -> '(' "expt" SASA SASA ')'                   (18)
	SASA -> '(' "fst" SASA ')'                         (19)
	SASA -> '(' "snd" SASA ')'                         (20)
	SASA -> '(' SASA ',' SASA ')'                      (21)
	SASA -> '(' "if" SASA SASA SASA ')'                (22)
	SASA -> '(' "let" '(' Bindings ')' SASA ')'        (23)
	SASA -> '(' "let*" '(' Bindings ')' SASA ')'       (24)
	SASA -> '[' ListItems ']'                          (25)
	SASA -> '[' ']'                                    (26)
	SASA -> '(' "head" SASA ')'                        (27)
	SASA -> '(' "tail" SASA ')'                        (28)
	SASA -> '(' var CondClauses ')'                    (29)
	SASA -> '(' SASA SASA ')'                          (30)
	ExpList -> SASA                                    (31)
	ExpList -> SASA ExpList                            (32)
	VarList -> var                                     (33)
	VarList -> var VarList                             (34)
	ListItems -> SASA                                  (35)
	ListItems -> SASA ',' ListItems                    (36)
	CondClauses -> '[' SASA SASA ']'                   (37)
	CondClauses -> '[' SASA SASA ']' CondClauses       (38)
	CondClauses -> '[' var SASA ']'                    (39)
	SASAList -> SASA                                   (40)
	SASAList -> SASA SASAList                          (41)
	Bindings -> Binding                                (42)
	Bindings -> Binding Bindings                       (43)
	Binding -> '(' var SASA ')'                        (44)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	int            { TokenNum $$ }
	bool           { TokenBool $$ }
	var            { TokenVar $$ }
	'+'            { TokenSuma }
	'-'            { TokenResta }
	'*'            { TokenMult }
	'/'            { TokenDiv }
	"sqrt"         { TokenSqrt }
	"expt"         { TokenExpt }
	"not"          { TokenNot }
	'('            { TokenPA }
	')'            { TokenPC }
	'['            { TokenCA }
	']'            { TokenCC }
	','            { TokenComa }
	"in"           { TokenIn }
	'='            { TokenEq }
	'<'            { TokenMenor }
	'>'            { TokenMayor }
	'<='           { TokenMenorIgual }
	'>='           { TokenMayorIgual }
	'!='           { TokenDistinto }
	"if"           { TokenIf }
	"fst"          { TokenFst }
	"snd"          { TokenSnd }
	"let"          { TokenLet }
	"let*"         { TokenLetStar }
	"lambda"       { TokenLambda }
	"head"         { TokenHead }
	"tail"         { TokenTail }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parser   rule  0
	SASA            rules 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30
	ExpList         rules 31, 32
	VarList         rules 33, 34
	ListItems       rules 35, 36
	CondClauses     rules 37, 38, 39
	SASAList        rules 40, 41
	Bindings        rules 42, 43
	Binding         rule  44

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parser -> . SASA                             (rule 0)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	'['            shift, and enter state 7

	SASA           goto state 3

State 1

	SASA -> . int                                       (rule 1)

	int            shift, and enter state 2


State 2

	SASA -> int .                                       (rule 1)

	int            reduce using rule 1
	bool           reduce using rule 1
	var            reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	','            reduce using rule 1
	%eof           reduce using rule 1


State 3

	%start_parser -> SASA .                             (rule 0)

	%eof           accept


State 4

	SASA -> bool .                                      (rule 2)

	int            reduce using rule 2
	bool           reduce using rule 2
	var            reduce using rule 2
	'('            reduce using rule 2
	')'            reduce using rule 2
	'['            reduce using rule 2
	']'            reduce using rule 2
	','            reduce using rule 2
	%eof           reduce using rule 2


State 5

	SASA -> var .                                       (rule 3)

	int            reduce using rule 3
	bool           reduce using rule 3
	var            reduce using rule 3
	'('            reduce using rule 3
	')'            reduce using rule 3
	'['            reduce using rule 3
	']'            reduce using rule 3
	','            reduce using rule 3
	%eof           reduce using rule 3


State 6

	SASA -> '(' . "not" SASA ')'                        (rule 4)
	SASA -> '(' . '+' ExpList ')'                       (rule 5)
	SASA -> '(' . '-' ExpList ')'                       (rule 6)
	SASA -> '(' . '*' ExpList ')'                       (rule 7)
	SASA -> '(' . '/' ExpList ')'                       (rule 8)
	SASA -> '(' . '=' ExpList ')'                       (rule 9)
	SASA -> '(' . '<' ExpList ')'                       (rule 10)
	SASA -> '(' . '>' ExpList ')'                       (rule 11)
	SASA -> '(' . '<=' ExpList ')'                      (rule 12)
	SASA -> '(' . '>=' ExpList ')'                      (rule 13)
	SASA -> '(' . '!=' ExpList ')'                      (rule 14)
	SASA -> '(' . "lambda" '(' VarList ')' SASA ')'     (rule 15)
	SASA -> '(' . SASA SASAList ')'                     (rule 16)
	SASA -> '(' . "sqrt" SASA ')'                       (rule 17)
	SASA -> '(' . "expt" SASA SASA ')'                  (rule 18)
	SASA -> '(' . "fst" SASA ')'                        (rule 19)
	SASA -> '(' . "snd" SASA ')'                        (rule 20)
	SASA -> '(' . SASA ',' SASA ')'                     (rule 21)
	SASA -> '(' . "if" SASA SASA SASA ')'               (rule 22)
	SASA -> '(' . "let" '(' Bindings ')' SASA ')'       (rule 23)
	SASA -> '(' . "let*" '(' Bindings ')' SASA ')'      (rule 24)
	SASA -> '(' . "head" SASA ')'                       (rule 27)
	SASA -> '(' . "tail" SASA ')'                       (rule 28)
	SASA -> '(' . var CondClauses ')'                   (rule 29)
	SASA -> '(' . SASA SASA ')'                         (rule 30)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 12
	'+'            shift, and enter state 13
	'-'            shift, and enter state 14
	'*'            shift, and enter state 15
	'/'            shift, and enter state 16
	"sqrt"         shift, and enter state 17
	"expt"         shift, and enter state 18
	"not"          shift, and enter state 19
	'('            shift, and enter state 6
	'['            shift, and enter state 7
	'='            shift, and enter state 20
	'<'            shift, and enter state 21
	'>'            shift, and enter state 22
	'<='           shift, and enter state 23
	'>='           shift, and enter state 24
	'!='           shift, and enter state 25
	"if"           shift, and enter state 26
	"fst"          shift, and enter state 27
	"snd"          shift, and enter state 28
	"let"          shift, and enter state 29
	"let*"         shift, and enter state 30
	"lambda"       shift, and enter state 31
	"head"         shift, and enter state 32
	"tail"         shift, and enter state 33

	SASA           goto state 11

State 7

	SASA -> '[' . ListItems ']'                         (rule 25)
	SASA -> '[' . ']'                                   (rule 26)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	'['            shift, and enter state 7
	']'            shift, and enter state 10

	SASA           goto state 8
	ListItems      goto state 9

State 8

	ListItems -> SASA .                                 (rule 35)
	ListItems -> SASA . ',' ListItems                   (rule 36)

	']'            reduce using rule 35
	','            shift, and enter state 62


State 9

	SASA -> '[' ListItems . ']'                         (rule 25)

	']'            shift, and enter state 61


State 10

	SASA -> '[' ']' .                                   (rule 26)

	int            reduce using rule 26
	bool           reduce using rule 26
	var            reduce using rule 26
	'('            reduce using rule 26
	')'            reduce using rule 26
	'['            reduce using rule 26
	']'            reduce using rule 26
	','            reduce using rule 26
	%eof           reduce using rule 26


State 11

	SASA -> '(' SASA . SASAList ')'                     (rule 16)
	SASA -> '(' SASA . ',' SASA ')'                     (rule 21)
	SASA -> '(' SASA . SASA ')'                         (rule 30)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	'['            shift, and enter state 7
	','            shift, and enter state 60

	SASA           goto state 58
	SASAList       goto state 59

State 12

	SASA -> var .                                       (rule 3)
	SASA -> '(' var . CondClauses ')'                   (rule 29)

	int            reduce using rule 3
	bool           reduce using rule 3
	var            reduce using rule 3
	'('            reduce using rule 3
	'['            shift, and enter state 57
			(reduce using rule 3)

	','            reduce using rule 3

	CondClauses    goto state 56

State 13

	SASA -> '(' '+' . ExpList ')'                       (rule 5)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	'['            shift, and enter state 7

	SASA           goto state 42
	ExpList        goto state 55

State 14

	SASA -> '(' '-' . ExpList ')'                       (rule 6)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	'['            shift, and enter state 7

	SASA           goto state 42
	ExpList        goto state 54

State 15

	SASA -> '(' '*' . ExpList ')'                       (rule 7)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	'['            shift, and enter state 7

	SASA           goto state 42
	ExpList        goto state 53

State 16

	SASA -> '(' '/' . ExpList ')'                       (rule 8)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	'['            shift, and enter state 7

	SASA           goto state 42
	ExpList        goto state 52

State 17

	SASA -> '(' "sqrt" . SASA ')'                       (rule 17)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	'['            shift, and enter state 7

	SASA           goto state 51

State 18

	SASA -> '(' "expt" . SASA SASA ')'                  (rule 18)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	'['            shift, and enter state 7

	SASA           goto state 50

State 19

	SASA -> '(' "not" . SASA ')'                        (rule 4)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	'['            shift, and enter state 7

	SASA           goto state 49

State 20

	SASA -> '(' '=' . ExpList ')'                       (rule 9)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	'['            shift, and enter state 7

	SASA           goto state 42
	ExpList        goto state 48

State 21

	SASA -> '(' '<' . ExpList ')'                       (rule 10)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	'['            shift, and enter state 7

	SASA           goto state 42
	ExpList        goto state 47

State 22

	SASA -> '(' '>' . ExpList ')'                       (rule 11)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	'['            shift, and enter state 7

	SASA           goto state 42
	ExpList        goto state 46

State 23

	SASA -> '(' '<=' . ExpList ')'                      (rule 12)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	'['            shift, and enter state 7

	SASA           goto state 42
	ExpList        goto state 45

State 24

	SASA -> '(' '>=' . ExpList ')'                      (rule 13)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	'['            shift, and enter state 7

	SASA           goto state 42
	ExpList        goto state 44

State 25

	SASA -> '(' '!=' . ExpList ')'                      (rule 14)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	'['            shift, and enter state 7

	SASA           goto state 42
	ExpList        goto state 43

State 26

	SASA -> '(' "if" . SASA SASA SASA ')'               (rule 22)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	'['            shift, and enter state 7

	SASA           goto state 41

State 27

	SASA -> '(' "fst" . SASA ')'                        (rule 19)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	'['            shift, and enter state 7

	SASA           goto state 40

State 28

	SASA -> '(' "snd" . SASA ')'                        (rule 20)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	'['            shift, and enter state 7

	SASA           goto state 39

State 29

	SASA -> '(' "let" . '(' Bindings ')' SASA ')'       (rule 23)

	'('            shift, and enter state 38


State 30

	SASA -> '(' "let*" . '(' Bindings ')' SASA ')'      (rule 24)

	'('            shift, and enter state 37


State 31

	SASA -> '(' "lambda" . '(' VarList ')' SASA ')'     (rule 15)

	'('            shift, and enter state 36


State 32

	SASA -> '(' "head" . SASA ')'                       (rule 27)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	'['            shift, and enter state 7

	SASA           goto state 35

State 33

	SASA -> '(' "tail" . SASA ')'                       (rule 28)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	'['            shift, and enter state 7

	SASA           goto state 34

State 34

	SASA -> '(' "tail" SASA . ')'                       (rule 28)

	')'            shift, and enter state 96


State 35

	SASA -> '(' "head" SASA . ')'                       (rule 27)

	')'            shift, and enter state 95


State 36

	SASA -> '(' "lambda" '(' . VarList ')' SASA ')'     (rule 15)

	var            shift, and enter state 94

	VarList        goto state 93

State 37

	SASA -> '(' "let*" '(' . Bindings ')' SASA ')'      (rule 24)

	'('            shift, and enter state 91

	Bindings       goto state 92
	Binding        goto state 90

State 38

	SASA -> '(' "let" '(' . Bindings ')' SASA ')'       (rule 23)

	'('            shift, and enter state 91

	Bindings       goto state 89
	Binding        goto state 90

State 39

	SASA -> '(' "snd" SASA . ')'                        (rule 20)

	')'            shift, and enter state 88


State 40

	SASA -> '(' "fst" SASA . ')'                        (rule 19)

	')'            shift, and enter state 87


State 41

	SASA -> '(' "if" SASA . SASA SASA ')'               (rule 22)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	'['            shift, and enter state 7

	SASA           goto state 86

State 42

	ExpList -> SASA .                                   (rule 31)
	ExpList -> SASA . ExpList                           (rule 32)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	')'            reduce using rule 31
	'['            shift, and enter state 7

	SASA           goto state 42
	ExpList        goto state 85

State 43

	SASA -> '(' '!=' ExpList . ')'                      (rule 14)

	')'            shift, and enter state 84


State 44

	SASA -> '(' '>=' ExpList . ')'                      (rule 13)

	')'            shift, and enter state 83


State 45

	SASA -> '(' '<=' ExpList . ')'                      (rule 12)

	')'            shift, and enter state 82


State 46

	SASA -> '(' '>' ExpList . ')'                       (rule 11)

	')'            shift, and enter state 81


State 47

	SASA -> '(' '<' ExpList . ')'                       (rule 10)

	')'            shift, and enter state 80


State 48

	SASA -> '(' '=' ExpList . ')'                       (rule 9)

	')'            shift, and enter state 79


State 49

	SASA -> '(' "not" SASA . ')'                        (rule 4)

	')'            shift, and enter state 78


State 50

	SASA -> '(' "expt" SASA . SASA ')'                  (rule 18)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	'['            shift, and enter state 7

	SASA           goto state 77

State 51

	SASA -> '(' "sqrt" SASA . ')'                       (rule 17)

	')'            shift, and enter state 76


State 52

	SASA -> '(' '/' ExpList . ')'                       (rule 8)

	')'            shift, and enter state 75


State 53

	SASA -> '(' '*' ExpList . ')'                       (rule 7)

	')'            shift, and enter state 74


State 54

	SASA -> '(' '-' ExpList . ')'                       (rule 6)

	')'            shift, and enter state 73


State 55

	SASA -> '(' '+' ExpList . ')'                       (rule 5)

	')'            shift, and enter state 72


State 56

	SASA -> '(' var CondClauses . ')'                   (rule 29)

	')'            shift, and enter state 71


State 57

	CondClauses -> '[' . SASA SASA ']'                  (rule 37)
	CondClauses -> '[' . SASA SASA ']' CondClauses      (rule 38)
	CondClauses -> '[' . var SASA ']'                   (rule 39)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 70
	'('            shift, and enter state 6
	'['            shift, and enter state 7

	SASA           goto state 69

State 58

	SASA -> '(' SASA SASA . ')'                         (rule 30)
	SASAList -> SASA .                                  (rule 40)
	SASAList -> SASA . SASAList                         (rule 41)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	')'            shift, and enter state 68
			(reduce using rule 40)

	'['            shift, and enter state 7

	SASA           goto state 66
	SASAList       goto state 67

State 59

	SASA -> '(' SASA SASAList . ')'                     (rule 16)

	')'            shift, and enter state 65


State 60

	SASA -> '(' SASA ',' . SASA ')'                     (rule 21)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	'['            shift, and enter state 7

	SASA           goto state 64

State 61

	SASA -> '[' ListItems ']' .                         (rule 25)

	int            reduce using rule 25
	bool           reduce using rule 25
	var            reduce using rule 25
	'('            reduce using rule 25
	')'            reduce using rule 25
	'['            reduce using rule 25
	']'            reduce using rule 25
	','            reduce using rule 25
	%eof           reduce using rule 25


State 62

	ListItems -> SASA ',' . ListItems                   (rule 36)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	'['            shift, and enter state 7

	SASA           goto state 8
	ListItems      goto state 63

State 63

	ListItems -> SASA ',' ListItems .                   (rule 36)

	']'            reduce using rule 36


State 64

	SASA -> '(' SASA ',' SASA . ')'                     (rule 21)

	')'            shift, and enter state 107


State 65

	SASA -> '(' SASA SASAList ')' .                     (rule 16)

	int            reduce using rule 16
	bool           reduce using rule 16
	var            reduce using rule 16
	'('            reduce using rule 16
	')'            reduce using rule 16
	'['            reduce using rule 16
	']'            reduce using rule 16
	','            reduce using rule 16
	%eof           reduce using rule 16


State 66

	SASAList -> SASA .                                  (rule 40)
	SASAList -> SASA . SASAList                         (rule 41)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	')'            reduce using rule 40
	'['            shift, and enter state 7

	SASA           goto state 66
	SASAList       goto state 67

State 67

	SASAList -> SASA SASAList .                         (rule 41)

	')'            reduce using rule 41


State 68

	SASA -> '(' SASA SASA ')' .                         (rule 30)

	int            reduce using rule 30
	bool           reduce using rule 30
	var            reduce using rule 30
	'('            reduce using rule 30
	')'            reduce using rule 30
	'['            reduce using rule 30
	']'            reduce using rule 30
	','            reduce using rule 30
	%eof           reduce using rule 30


State 69

	CondClauses -> '[' SASA . SASA ']'                  (rule 37)
	CondClauses -> '[' SASA . SASA ']' CondClauses      (rule 38)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	'['            shift, and enter state 7

	SASA           goto state 106

State 70

	SASA -> var .                                       (rule 3)
	CondClauses -> '[' var . SASA ']'                   (rule 39)

	int            shift, and enter state 2
			(reduce using rule 3)

	bool           shift, and enter state 4
			(reduce using rule 3)

	var            shift, and enter state 5
			(reduce using rule 3)

	'('            shift, and enter state 6
			(reduce using rule 3)

	'['            shift, and enter state 7
			(reduce using rule 3)


	SASA           goto state 105

State 71

	SASA -> '(' var CondClauses ')' .                   (rule 29)

	int            reduce using rule 29
	bool           reduce using rule 29
	var            reduce using rule 29
	'('            reduce using rule 29
	')'            reduce using rule 29
	'['            reduce using rule 29
	']'            reduce using rule 29
	','            reduce using rule 29
	%eof           reduce using rule 29


State 72

	SASA -> '(' '+' ExpList ')' .                       (rule 5)

	int            reduce using rule 5
	bool           reduce using rule 5
	var            reduce using rule 5
	'('            reduce using rule 5
	')'            reduce using rule 5
	'['            reduce using rule 5
	']'            reduce using rule 5
	','            reduce using rule 5
	%eof           reduce using rule 5


State 73

	SASA -> '(' '-' ExpList ')' .                       (rule 6)

	int            reduce using rule 6
	bool           reduce using rule 6
	var            reduce using rule 6
	'('            reduce using rule 6
	')'            reduce using rule 6
	'['            reduce using rule 6
	']'            reduce using rule 6
	','            reduce using rule 6
	%eof           reduce using rule 6


State 74

	SASA -> '(' '*' ExpList ')' .                       (rule 7)

	int            reduce using rule 7
	bool           reduce using rule 7
	var            reduce using rule 7
	'('            reduce using rule 7
	')'            reduce using rule 7
	'['            reduce using rule 7
	']'            reduce using rule 7
	','            reduce using rule 7
	%eof           reduce using rule 7


State 75

	SASA -> '(' '/' ExpList ')' .                       (rule 8)

	int            reduce using rule 8
	bool           reduce using rule 8
	var            reduce using rule 8
	'('            reduce using rule 8
	')'            reduce using rule 8
	'['            reduce using rule 8
	']'            reduce using rule 8
	','            reduce using rule 8
	%eof           reduce using rule 8


State 76

	SASA -> '(' "sqrt" SASA ')' .                       (rule 17)

	int            reduce using rule 17
	bool           reduce using rule 17
	var            reduce using rule 17
	'('            reduce using rule 17
	')'            reduce using rule 17
	'['            reduce using rule 17
	']'            reduce using rule 17
	','            reduce using rule 17
	%eof           reduce using rule 17


State 77

	SASA -> '(' "expt" SASA SASA . ')'                  (rule 18)

	')'            shift, and enter state 104


State 78

	SASA -> '(' "not" SASA ')' .                        (rule 4)

	int            reduce using rule 4
	bool           reduce using rule 4
	var            reduce using rule 4
	'('            reduce using rule 4
	')'            reduce using rule 4
	'['            reduce using rule 4
	']'            reduce using rule 4
	','            reduce using rule 4
	%eof           reduce using rule 4


State 79

	SASA -> '(' '=' ExpList ')' .                       (rule 9)

	int            reduce using rule 9
	bool           reduce using rule 9
	var            reduce using rule 9
	'('            reduce using rule 9
	')'            reduce using rule 9
	'['            reduce using rule 9
	']'            reduce using rule 9
	','            reduce using rule 9
	%eof           reduce using rule 9


State 80

	SASA -> '(' '<' ExpList ')' .                       (rule 10)

	int            reduce using rule 10
	bool           reduce using rule 10
	var            reduce using rule 10
	'('            reduce using rule 10
	')'            reduce using rule 10
	'['            reduce using rule 10
	']'            reduce using rule 10
	','            reduce using rule 10
	%eof           reduce using rule 10


State 81

	SASA -> '(' '>' ExpList ')' .                       (rule 11)

	int            reduce using rule 11
	bool           reduce using rule 11
	var            reduce using rule 11
	'('            reduce using rule 11
	')'            reduce using rule 11
	'['            reduce using rule 11
	']'            reduce using rule 11
	','            reduce using rule 11
	%eof           reduce using rule 11


State 82

	SASA -> '(' '<=' ExpList ')' .                      (rule 12)

	int            reduce using rule 12
	bool           reduce using rule 12
	var            reduce using rule 12
	'('            reduce using rule 12
	')'            reduce using rule 12
	'['            reduce using rule 12
	']'            reduce using rule 12
	','            reduce using rule 12
	%eof           reduce using rule 12


State 83

	SASA -> '(' '>=' ExpList ')' .                      (rule 13)

	int            reduce using rule 13
	bool           reduce using rule 13
	var            reduce using rule 13
	'('            reduce using rule 13
	')'            reduce using rule 13
	'['            reduce using rule 13
	']'            reduce using rule 13
	','            reduce using rule 13
	%eof           reduce using rule 13


State 84

	SASA -> '(' '!=' ExpList ')' .                      (rule 14)

	int            reduce using rule 14
	bool           reduce using rule 14
	var            reduce using rule 14
	'('            reduce using rule 14
	')'            reduce using rule 14
	'['            reduce using rule 14
	']'            reduce using rule 14
	','            reduce using rule 14
	%eof           reduce using rule 14


State 85

	ExpList -> SASA ExpList .                           (rule 32)

	')'            reduce using rule 32


State 86

	SASA -> '(' "if" SASA SASA . SASA ')'               (rule 22)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	'['            shift, and enter state 7

	SASA           goto state 103

State 87

	SASA -> '(' "fst" SASA ')' .                        (rule 19)

	int            reduce using rule 19
	bool           reduce using rule 19
	var            reduce using rule 19
	'('            reduce using rule 19
	')'            reduce using rule 19
	'['            reduce using rule 19
	']'            reduce using rule 19
	','            reduce using rule 19
	%eof           reduce using rule 19


State 88

	SASA -> '(' "snd" SASA ')' .                        (rule 20)

	int            reduce using rule 20
	bool           reduce using rule 20
	var            reduce using rule 20
	'('            reduce using rule 20
	')'            reduce using rule 20
	'['            reduce using rule 20
	']'            reduce using rule 20
	','            reduce using rule 20
	%eof           reduce using rule 20


State 89

	SASA -> '(' "let" '(' Bindings . ')' SASA ')'       (rule 23)

	')'            shift, and enter state 102


State 90

	Bindings -> Binding .                               (rule 42)
	Bindings -> Binding . Bindings                      (rule 43)

	'('            shift, and enter state 91
	')'            reduce using rule 42

	Bindings       goto state 101
	Binding        goto state 90

State 91

	Binding -> '(' . var SASA ')'                       (rule 44)

	var            shift, and enter state 100


State 92

	SASA -> '(' "let*" '(' Bindings . ')' SASA ')'      (rule 24)

	')'            shift, and enter state 99


State 93

	SASA -> '(' "lambda" '(' VarList . ')' SASA ')'     (rule 15)

	')'            shift, and enter state 98


State 94

	VarList -> var .                                    (rule 33)
	VarList -> var . VarList                            (rule 34)

	var            shift, and enter state 94
	')'            reduce using rule 33

	VarList        goto state 97

State 95

	SASA -> '(' "head" SASA ')' .                       (rule 27)

	int            reduce using rule 27
	bool           reduce using rule 27
	var            reduce using rule 27
	'('            reduce using rule 27
	')'            reduce using rule 27
	'['            reduce using rule 27
	']'            reduce using rule 27
	','            reduce using rule 27
	%eof           reduce using rule 27


State 96

	SASA -> '(' "tail" SASA ')' .                       (rule 28)

	int            reduce using rule 28
	bool           reduce using rule 28
	var            reduce using rule 28
	'('            reduce using rule 28
	')'            reduce using rule 28
	'['            reduce using rule 28
	']'            reduce using rule 28
	','            reduce using rule 28
	%eof           reduce using rule 28


State 97

	VarList -> var VarList .                            (rule 34)

	')'            reduce using rule 34


State 98

	SASA -> '(' "lambda" '(' VarList ')' . SASA ')'     (rule 15)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	'['            shift, and enter state 7

	SASA           goto state 114

State 99

	SASA -> '(' "let*" '(' Bindings ')' . SASA ')'      (rule 24)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	'['            shift, and enter state 7

	SASA           goto state 113

State 100

	Binding -> '(' var . SASA ')'                       (rule 44)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	'['            shift, and enter state 7

	SASA           goto state 112

State 101

	Bindings -> Binding Bindings .                      (rule 43)

	')'            reduce using rule 43


State 102

	SASA -> '(' "let" '(' Bindings ')' . SASA ')'       (rule 23)

	int            shift, and enter state 2
	bool           shift, and enter state 4
	var            shift, and enter state 5
	'('            shift, and enter state 6
	'['            shift, and enter state 7

	SASA           goto state 111

State 103

	SASA -> '(' "if" SASA SASA SASA . ')'               (rule 22)

	')'            shift, and enter state 110


State 104

	SASA -> '(' "expt" SASA SASA ')' .                  (rule 18)

	int            reduce using rule 18
	bool           reduce using rule 18
	var            reduce using rule 18
	'('            reduce using rule 18
	')'            reduce using rule 18
	'['            reduce using rule 18
	']'            reduce using rule 18
	','            reduce using rule 18
	%eof           reduce using rule 18


State 105

	CondClauses -> '[' var SASA . ']'                   (rule 39)

	']'            shift, and enter state 109


State 106

	CondClauses -> '[' SASA SASA . ']'                  (rule 37)
	CondClauses -> '[' SASA SASA . ']' CondClauses      (rule 38)

	']'            shift, and enter state 108


State 107

	SASA -> '(' SASA ',' SASA ')' .                     (rule 21)

	int            reduce using rule 21
	bool           reduce using rule 21
	var            reduce using rule 21
	'('            reduce using rule 21
	')'            reduce using rule 21
	'['            reduce using rule 21
	']'            reduce using rule 21
	','            reduce using rule 21
	%eof           reduce using rule 21


State 108

	CondClauses -> '[' SASA SASA ']' .                  (rule 37)
	CondClauses -> '[' SASA SASA ']' . CondClauses      (rule 38)

	')'            reduce using rule 37
	'['            shift, and enter state 57

	CondClauses    goto state 119

State 109

	CondClauses -> '[' var SASA ']' .                   (rule 39)

	')'            reduce using rule 39


State 110

	SASA -> '(' "if" SASA SASA SASA ')' .               (rule 22)

	int            reduce using rule 22
	bool           reduce using rule 22
	var            reduce using rule 22
	'('            reduce using rule 22
	')'            reduce using rule 22
	'['            reduce using rule 22
	']'            reduce using rule 22
	','            reduce using rule 22
	%eof           reduce using rule 22


State 111

	SASA -> '(' "let" '(' Bindings ')' SASA . ')'       (rule 23)

	')'            shift, and enter state 118


State 112

	Binding -> '(' var SASA . ')'                       (rule 44)

	')'            shift, and enter state 117


State 113

	SASA -> '(' "let*" '(' Bindings ')' SASA . ')'      (rule 24)

	')'            shift, and enter state 116


State 114

	SASA -> '(' "lambda" '(' VarList ')' SASA . ')'     (rule 15)

	')'            shift, and enter state 115


State 115

	SASA -> '(' "lambda" '(' VarList ')' SASA ')' .     (rule 15)

	int            reduce using rule 15
	bool           reduce using rule 15
	var            reduce using rule 15
	'('            reduce using rule 15
	')'            reduce using rule 15
	'['            reduce using rule 15
	']'            reduce using rule 15
	','            reduce using rule 15
	%eof           reduce using rule 15


State 116

	SASA -> '(' "let*" '(' Bindings ')' SASA ')' .      (rule 24)

	int            reduce using rule 24
	bool           reduce using rule 24
	var            reduce using rule 24
	'('            reduce using rule 24
	')'            reduce using rule 24
	'['            reduce using rule 24
	']'            reduce using rule 24
	','            reduce using rule 24
	%eof           reduce using rule 24


State 117

	Binding -> '(' var SASA ')' .                       (rule 44)

	'('            reduce using rule 44
	')'            reduce using rule 44


State 118

	SASA -> '(' "let" '(' Bindings ')' SASA ')' .       (rule 23)

	int            reduce using rule 23
	bool           reduce using rule 23
	var            reduce using rule 23
	'('            reduce using rule 23
	')'            reduce using rule 23
	'['            reduce using rule 23
	']'            reduce using rule 23
	','            reduce using rule 23
	%eof           reduce using rule 23


State 119

	CondClauses -> '[' SASA SASA ']' CondClauses .      (rule 38)

	')'            reduce using rule 38


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 45
Number of terminals: 30
Number of non-terminals: 9
Number of states: 120
